# dp 퇴사
# 각각의 상담은 상담을 완료하는데 걸리는 기간 Ti와 상담을 했을 때 받을 수 있는 금액 Pi로 이루어져 있다.
# N = 7인 경우에 다음과 같은 상담 일정표를 보자.
# Ti	3	5	1	1	2	4	2
# Pi	10	20	10	20	15	40	200
# 상담을 적절히 했을 때, 백준이가 얻을 수 있는 최대 수익을 구하는 프로그램을 작성하시오.
# 입력 : 첫째 줄에 N (1 ≤ N ≤ 15)이 주어진다. 둘째 줄부터 N개의 줄에 Ti와 Pi가 공백으로 구분되어서 주어지며, 1일부터 N일까지 순서대로 주어진다.
# (1 ≤ Ti ≤ 5, 1 ≤ Pi ≤ 1,000)
# 7일 - 0
# 6일 - dp[7]
# 5일 - dp[5 + 2] + p[5] = 15 / dp[6]
# 4일 - dp[4 + 1] + p[4] = 15 + 20 / dp[5] = 15
# 3일 - dp[3 + 1] + p[3] = 35 + 10 / dp[4] = 35
# 2일 - dp[2 + 5] + p[2] = 20 / dp[3] = 45  > 2일에 5일간 일해서 얻는 이득보다 3일에 일해서 얻는 이득이 큼
# 1일 - dp[1 + 3] + p[1] = 35 + 10 / dp[2] = 20 > 1일에 일하고 4일에 일하고 5일에 일할 수 있는 결과물 
# 출력 : 첫째 줄에 백준이가 얻을 수 있는 최대 이익을 출력한다.
n = int(input())
dp = [0] * (n + 1)
t = [0] * (n + 1)
p = [0] * (n + 1)

for i in range(n):
    t[i], p[i] = map(int, input().split())

for i in range(n - 1, -1, -1):
    if i + t[i] > n:
        dp[i] = dp[i+1]
    else:
        dp[i] = max(p[i] + dp[i + t[i]], dp[i + 1])

print(dp[0])        # 최대이익

# 7
# 3 10
# 5 20
# 1 10
# 1 20
# 2 15
# 4 40
# 2 200